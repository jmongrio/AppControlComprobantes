<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnAtras.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAKYUAACmFAY9V/uEAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAAH3RFWHRUaXRsZQBQYXBlciBTeW1ib2xpYyBJY29uIFRoZW1lF8QW1AAAAQ9JREFUaEPtlLsKwkAQ
        AFP4AMEHPn7AShHEyj8QP0IsxMZKRdHaP48T2INwRGMg0T3ZgSkSdsNwJIkMw/hT4jhuY10u9UNsB4+4
        w4bc1ksq+CHqDifOD9YdTtSrYOdaRnVAUF7wHpsy/nuIseBKIcaCK4UYC64UYiy4UojJC77hFMclOMGZ
        Z09SPoOFvOBvuJCcfBjWEJxYKHrrLf/KPz/pBBa6GM477WCph6fUQ3zvuMQ5+l9+GRb7ezhYTE78XfgG
        azKuB6Is/KsQlbzjZ4nM0sJLhahgw/t4kcgs1YYPMNjwq0RmqTZ8iO/CVzKqC8JenfgBWzKmD+L8E9cd
        7CDShYcR7CB2FFSwYRhFiaIngptM+3FwJtcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMzMzAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAyMjIHNDQ0nnR0tPP09TV9MvLyzYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAycnNPs3Nzq/Hx8j7v7/A/8LDxP/T1NX/09TU6E1NUjsAAAAJAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAx8rKScvMzsa+vr//u7y9/728vf/Gxcb/yMfI/9bX2P/a29z/wsLE1AYGBkkAAAAhAAAACAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxMTIPcnLy8W3trf/s7K0/769v/+4tLb/wsHD/8XGx//Pz9D/2tvc/9zd3f/d3t//oaKiqQAA
        AEsAAAAzAAAAGgAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAx8fHIMbIya26ubr+sa+x/7WytP/IyMn/w8PE/7Wztf/JyMn/2Nna/9rb3P/c3d3/3d7f/97f
        4P/e3t/8aGhocAAAAEIAAAA0AAAAJAAAABMAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAv7+/BMXHx3jIycz1y8zN/83Oz//P0NH/vr2+/7e1t//MzM3/19jY/9PT1P/Z2tv/29zd/93e
        3v/e3+D/3+Dh/+Dh4v/W19fgFxcXQAAAADMAAAAqAAAAIQAAABcAAAAJAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMLCwibGx8jLysvM/8vMzv/Nz9D/z9DR/9HS0//T1NX/1dbX/9bX2P/Y2dr/2tvb/9vc
        3f/c3d7/3d7f/9PU1f/Ly8z/v7/A/9TU1f/AwcGaAAAAKQAAACIAAAAZAAAAEAAAAAkAAAAEAAAAAQAA
        AAAAAAAAAAAAAAAAAACvv78Qx8jK7MvMzf/Mzc7/zs/Q/9DR0v/S09P/09TV/9XW1//W19j/2Nna/9na
        2//b3Nz/29zd/83Nzv/Hx8j/xMTF/9DR0v/CwsP/xcXG/9/f4PqOjo5CAAAAFAAAAAwAAAAGAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIyspdzM3P/s/Q0f/Q0dL/0tPU/9TV1v/V1tf/19fY/9jZ
        2f/Z2tv/2tvc/9vc3f/c3d7/z9DR/9fY2f/Pz9D/xMTF/7+/wP/Gxsf/zMzN/97e38IAAAAJAAAABAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADNzc+B0dLT/9PU1f/U1db/1dbX/9bX
        2P/Y2dr/2Nna/9na2//a29z/29zd/9vc3f/b3N3/vLy9/8nKyv/Q0NH/4ODh/+Dh4v/W19f/2dra/9ve
        3lcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHQ0dOu1NXW/9XW
        1//W19j/19jZ/9jZ2v/Y2dr/2drb/9rb3P/T1NX/yMnK/8rLy//X2Nn/z8/Q/97f4P/d3d7/zM3N/8vL
        zP/HyMj/4uLj3tra2gcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMTE
        xA3T1NXY1dbY/9bX2P/X2Nn/19na/9jZ2v/Nzs//yMjJ/9DQ0f/b3Nz/3Nzd/9zd3v/AwMH/x8fI/8zN
        zv/e39//4OHh/9rb2//U1db/4ePjcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAANHR0S3U1df21tfY/9fY2f/Iycr/xMTF/9PT1P/Z2tv/2tvc/9LT0//Jycr/ysrL/9rb
        3P/Ly8z/3t/g/93e3//Nzs//y8zN/8XFxv/h4eLq19fXDQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAANLS1WjV1tf/v8DA/9PU1f/Fxsf/2Nna/8rLzP/HyMn/0NHS/9vc
        3f/c3N3/29zd/8LCw//ExMX/zMzN/9zd3v/f4OH/3Nzd/9LT0//f4eF6AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANTV1rLFxcb/1NXW/8DAwf++vr//1dbX/9na
        2//Z2tv/zs7P/8nJyv/Ly8z/29vc/8vLzP/e3t//3d7e/8/P0P/Ly8z/xMTF/+Dg4evn5+cLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx8fSF9TV1eu7u7z/1dbX/8bH
        yP/U1dX/x8jJ/8fIyf/U1db/2tvc/9vc3f/Y2dr/w8TF/8PExf/MzM3/2tvc/8fHyP/BwcL/09PU/97h
        4W8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NPTWM3N
        zv/Gx8j/xcXG/7u8vf/Y2Nn/2NnZ/9fY2f/Kysv/ycnK/83Nzv/b3N3/ysvM/9zd3v/c3N3/wMDB/8DA
        wf/Fxsb/3+Hh3qqqqgMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA0tTUs8LDxP/V1tf/y8zN/8fIyf/Gx8j/ubm6/8TExf/Z2tv/2tvb/9PT1P/DxMT/w8PE/83N
        zv/S0tP/wsLD/76+v//X2Nn/29/fUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADM1NQe0dLT9L6/wP+6urv/v7/A/8jIyf++vr//yMjJ/8fIyf/Gxsf/vb2+/8PD
        xP/Jycr/3N3d/9bX2P++v7//xMXF/8jJyv/e3uC3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ0tJ5xsbH/8nKy/+9vr//urq7/7m5uv+5urv/vLy9/8jJ
        yv/CwsP/u7y9/729vv/Excb/x8fI/8jIyf/AwMH/wMDB/93e3/za4+McAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALa2tgfR0tTcvLy9/7u7vP/Excb/vr6//8DB
        wv/ExMX/xcbH/8HBwv/Excb/zM3O/8rKy//W19j/vr6//76+v//BwsP/19jY/9zc3nYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANLS0lXHyMn/xsfI/7i4
        uf+8vb7/u7u8/7m5uv+8vb7/zM3O/7m5uv+/v8D/xcXG/8rKy//V1tf/29zd/9zd3v/c3d7/3N7fygAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdDR
        08u6u7z/yMjJ/8TFxv+9vb7/v7/A/8fHyP/HyMn/0dLT/9jZ2v/Z2tv/2drb/9rb3P/b3N3/29zd/9zd
        3f/d3d794ODgGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAzs7RScXGx/+6u7z/wMDB/8XGx//S09T/1dbX/9bW1//Jysv/xcbH/83Oz//Z2tr/2trb/9rb
        3P/b3Nz/29zd/9zd3v/e3t5dAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAz9DQzc/Q0f/R0tT/0tPU/8/Q0f/AwcL/vLy9/8XGx//Dw8T/xsfI/9jZ
        2v/Z2tv/2tvc/9rb3P/b3N3/3Nzd/9zc3ZkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOzs5ay8zN/8jJyv+7u7z/tre4/8LCw//AwMH/vr6//8bG
        x//Cw8T/1tfY/9jZ2v/Z2tv/2tvb/9vc3P/b3N3/29vcyQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKqqqgbMzc7ptLW2/7e3uP/Gx8j/xsfI/83O
        z//U1db/1dbX/9bX2P/X2Nnt2Nnav9na2pTX2tpv29vbTtzc3DTd3d0eAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM3O0I/HyMn/zs/Q/9HS
        0//R0tP+0tPU1NLU1pbU1Nda0tnZIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMzMPc3O
        z/nOz9GzztDQY83NzRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC/v78EycnJEwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////+////8H///8Af//8AB//8AAH/8AAAf8AAAB+AAAAPAAAAP4AA
        AH/AAAH/wAAA/+AAAP/wAAB/+AAAf/wAAD/8AAA//gAAH/8AAB//AAAf/4AAD/+AAA//wAAP/8AAB//g
        AAf/8AAH//AAB//wAAf/+AP///g////5//8=
</value>
  </data>
</root>